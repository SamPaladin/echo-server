syntax = "proto3";

option java_package = "com.zeptolab.analytics.arcade.protocol";
option java_multiple_files = true;
option go_package = "analytics/pb";

service RouteAnalyticsService {
  rpc SessionStartedEvent(SessionStartedEventRequest) returns (SessionStartedEventResponse);
  rpc StageCompletedEvent(StageCompletedEventRequest) returns (StageCompletedEventResponse);
  rpc ChapterCompletedEvent(ChapterCompletedEventRequest) returns (ChapterCompletedEventResponse);
  rpc BasicStageCompletedEvent(BasicStageCompletedEventRequest) returns (BasicStageCompletedEventResponse);
  rpc EventStageCompletedEvent(EventStageCompletedEventRequest) returns (EventStageCompletedEventResponse);
  rpc BasicLevelNewScoreEvent(BasicLevelNewScoreEventRequest) returns (BasicLevelNewScoreEventResponse);
  rpc EventLevelNewScoreEvent(EventLevelNewScoreEventRequest) returns (EventLevelNewScoreEventResponse);

  // FOR TESTING ONLY
  rpc IsAlive(IsAliveRequest) returns (IsAliveResponse);
}

message IsAliveRequest {}
message IsAliveResponse {}

message SessionStartedEventRequest {
  bytes event_id = 1; // expecting UUID (16 bytes)

  int64 datetime = 2;
  bool new_user = 3;
  int32 session_count = 4;
}
message SessionStartedEventResponse {
  bytes event_id = 1; // expecting UUID (16 bytes)
  bool event_saved = 2;
  string debug_message = 3; // will not be present on production stage
}
message StageCompletedEventRequest {
  bytes event_id = 1; // expecting UUID (16 bytes)

  int64 datetime = 2;
  string stage_id = 3;
  int32 attempts = 4;
  string game_mode = 5;
  int32 session_count = 6;
  int32 all_stars = 7;
  int32 basic_stars = 8;
  int32 prev_all_stars = 9;
  int32 prev_basic_stars = 10;
  bool first_success = 11;
  bool is_bonus = 12;
  int32 active_days = 13;
}
message StageCompletedEventResponse {
  bytes event_id = 1; // expecting UUID (16 bytes)
  bool event_saved = 2;
  string debug_message = 3; // will not be present on production stage
}


message ChapterCompletedEventRequest {
  int32 active_days = 1;
  int32 session_count = 2;

  int32 max_chapter = 3;

  bytes event_id = 14; // expecting UUID (16 bytes)
  int64 datetime = 15; // unix timestamp based with ms
}
message ChapterCompletedEventResponse {
  bytes event_id = 1;
  bool event_saved = 2;
  string debug_message = 3;
}
message BasicStageCompletedEventRequest {
  int32 active_days = 1;
  int32 session_count = 2;

  int32 basic_completion = 3;
  bool is_bonus = 4;

  bytes event_id = 14; // expecting UUID (16 bytes)
  int64 datetime = 15; // unix timestamp based with ms
}
message BasicStageCompletedEventResponse {
  bytes event_id = 1;
  bool event_saved = 2;
  string debug_message = 3;
}
message EventStageCompletedEventRequest {
  int32 active_days = 1;
  int32 session_count = 2;

  int32 event_completion = 3;
  string game_event_id = 4;

  bytes event_id = 14; // expecting UUID (16 bytes)
  int64 datetime = 15; // unix timestamp based with ms
}
message EventStageCompletedEventResponse {
  bytes event_id = 1;
  bool event_saved = 2;
  string debug_message = 3;
}
message BasicLevelNewScoreEventRequest {
  int32 active_days = 1;
  int32 session_count = 2;

  int32 stars_completion = 3;
  int32 game_completion = 4;
  bool is_bonus = 5;
  bool first_success = 6;
  int32 prev_basic_stars = 7;
  int32 prev_all_stars = 8;
  int32 basic_stars = 9;
  int32 all_stars = 10;
  bytes event_id = 14; // expecting UUID (16 bytes)
  int64 datetime = 15; // unix timestamp based with ms
}
message BasicLevelNewScoreEventResponse {
  bytes event_id = 1;
  bool event_saved = 2;
  string debug_message = 3;
}
message EventLevelNewScoreEventRequest {
  int32 active_days = 1;
  int32 session_count = 2;
  int32 event_full_completion = 3;
  string game_event_id = 4;
  int32 event_stamps = 5;
  bool is_bonus = 6;
  bool first_success = 7;
  int32 prev_basic_stars = 8;
  int32 prev_all_stars = 9;
  int32 basic_stars = 10;
  int32 all_stars = 11;
  bytes event_id = 14; // expecting UUID (16 bytes)
  int64 datetime = 15; // unix timestamp based with ms
}
message EventLevelNewScoreEventResponse {
  bytes event_id = 1;
  bool event_saved = 2;
  string debug_message = 3;
}
