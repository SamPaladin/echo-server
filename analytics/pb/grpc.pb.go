// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.21.7
// source: grpc.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IsAliveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsAliveRequest) Reset() {
	*x = IsAliveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAliveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAliveRequest) ProtoMessage() {}

func (x *IsAliveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAliveRequest.ProtoReflect.Descriptor instead.
func (*IsAliveRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{0}
}

type IsAliveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IsAliveResponse) Reset() {
	*x = IsAliveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IsAliveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsAliveResponse) ProtoMessage() {}

func (x *IsAliveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsAliveResponse.ProtoReflect.Descriptor instead.
func (*IsAliveResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{1}
}

type SessionStartedEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId      []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"` // expecting UUID (16 bytes)
	Datetime     int64  `protobuf:"varint,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	NewUser      bool   `protobuf:"varint,3,opt,name=new_user,json=newUser,proto3" json:"new_user,omitempty"`
	SessionCount int32  `protobuf:"varint,4,opt,name=session_count,json=sessionCount,proto3" json:"session_count,omitempty"`
}

func (x *SessionStartedEventRequest) Reset() {
	*x = SessionStartedEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionStartedEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionStartedEventRequest) ProtoMessage() {}

func (x *SessionStartedEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionStartedEventRequest.ProtoReflect.Descriptor instead.
func (*SessionStartedEventRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{2}
}

func (x *SessionStartedEventRequest) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *SessionStartedEventRequest) GetDatetime() int64 {
	if x != nil {
		return x.Datetime
	}
	return 0
}

func (x *SessionStartedEventRequest) GetNewUser() bool {
	if x != nil {
		return x.NewUser
	}
	return false
}

func (x *SessionStartedEventRequest) GetSessionCount() int32 {
	if x != nil {
		return x.SessionCount
	}
	return 0
}

type SessionStartedEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId      []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"` // expecting UUID (16 bytes)
	EventSaved   bool   `protobuf:"varint,2,opt,name=event_saved,json=eventSaved,proto3" json:"event_saved,omitempty"`
	DebugMessage string `protobuf:"bytes,3,opt,name=debug_message,json=debugMessage,proto3" json:"debug_message,omitempty"` // will not be present on production stage
}

func (x *SessionStartedEventResponse) Reset() {
	*x = SessionStartedEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionStartedEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionStartedEventResponse) ProtoMessage() {}

func (x *SessionStartedEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionStartedEventResponse.ProtoReflect.Descriptor instead.
func (*SessionStartedEventResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{3}
}

func (x *SessionStartedEventResponse) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *SessionStartedEventResponse) GetEventSaved() bool {
	if x != nil {
		return x.EventSaved
	}
	return false
}

func (x *SessionStartedEventResponse) GetDebugMessage() string {
	if x != nil {
		return x.DebugMessage
	}
	return ""
}

type StageCompletedEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId        []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"` // expecting UUID (16 bytes)
	Datetime       int64  `protobuf:"varint,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	StageId        string `protobuf:"bytes,3,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	Attempts       int32  `protobuf:"varint,4,opt,name=attempts,proto3" json:"attempts,omitempty"`
	GameMode       string `protobuf:"bytes,5,opt,name=game_mode,json=gameMode,proto3" json:"game_mode,omitempty"`
	SessionCount   int32  `protobuf:"varint,6,opt,name=session_count,json=sessionCount,proto3" json:"session_count,omitempty"`
	AllStars       int32  `protobuf:"varint,7,opt,name=all_stars,json=allStars,proto3" json:"all_stars,omitempty"`
	BasicStars     int32  `protobuf:"varint,8,opt,name=basic_stars,json=basicStars,proto3" json:"basic_stars,omitempty"`
	PrevAllStars   int32  `protobuf:"varint,9,opt,name=prev_all_stars,json=prevAllStars,proto3" json:"prev_all_stars,omitempty"`
	PrevBasicStars int32  `protobuf:"varint,10,opt,name=prev_basic_stars,json=prevBasicStars,proto3" json:"prev_basic_stars,omitempty"`
	FirstSuccess   bool   `protobuf:"varint,11,opt,name=first_success,json=firstSuccess,proto3" json:"first_success,omitempty"`
	IsBonus        bool   `protobuf:"varint,12,opt,name=is_bonus,json=isBonus,proto3" json:"is_bonus,omitempty"`
	ActiveDays     int32  `protobuf:"varint,13,opt,name=active_days,json=activeDays,proto3" json:"active_days,omitempty"`
}

func (x *StageCompletedEventRequest) Reset() {
	*x = StageCompletedEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageCompletedEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageCompletedEventRequest) ProtoMessage() {}

func (x *StageCompletedEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageCompletedEventRequest.ProtoReflect.Descriptor instead.
func (*StageCompletedEventRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{4}
}

func (x *StageCompletedEventRequest) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *StageCompletedEventRequest) GetDatetime() int64 {
	if x != nil {
		return x.Datetime
	}
	return 0
}

func (x *StageCompletedEventRequest) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *StageCompletedEventRequest) GetAttempts() int32 {
	if x != nil {
		return x.Attempts
	}
	return 0
}

func (x *StageCompletedEventRequest) GetGameMode() string {
	if x != nil {
		return x.GameMode
	}
	return ""
}

func (x *StageCompletedEventRequest) GetSessionCount() int32 {
	if x != nil {
		return x.SessionCount
	}
	return 0
}

func (x *StageCompletedEventRequest) GetAllStars() int32 {
	if x != nil {
		return x.AllStars
	}
	return 0
}

func (x *StageCompletedEventRequest) GetBasicStars() int32 {
	if x != nil {
		return x.BasicStars
	}
	return 0
}

func (x *StageCompletedEventRequest) GetPrevAllStars() int32 {
	if x != nil {
		return x.PrevAllStars
	}
	return 0
}

func (x *StageCompletedEventRequest) GetPrevBasicStars() int32 {
	if x != nil {
		return x.PrevBasicStars
	}
	return 0
}

func (x *StageCompletedEventRequest) GetFirstSuccess() bool {
	if x != nil {
		return x.FirstSuccess
	}
	return false
}

func (x *StageCompletedEventRequest) GetIsBonus() bool {
	if x != nil {
		return x.IsBonus
	}
	return false
}

func (x *StageCompletedEventRequest) GetActiveDays() int32 {
	if x != nil {
		return x.ActiveDays
	}
	return 0
}

type StageCompletedEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId      []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"` // expecting UUID (16 bytes)
	EventSaved   bool   `protobuf:"varint,2,opt,name=event_saved,json=eventSaved,proto3" json:"event_saved,omitempty"`
	DebugMessage string `protobuf:"bytes,3,opt,name=debug_message,json=debugMessage,proto3" json:"debug_message,omitempty"` // will not be present on production stage
}

func (x *StageCompletedEventResponse) Reset() {
	*x = StageCompletedEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StageCompletedEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StageCompletedEventResponse) ProtoMessage() {}

func (x *StageCompletedEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StageCompletedEventResponse.ProtoReflect.Descriptor instead.
func (*StageCompletedEventResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{5}
}

func (x *StageCompletedEventResponse) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *StageCompletedEventResponse) GetEventSaved() bool {
	if x != nil {
		return x.EventSaved
	}
	return false
}

func (x *StageCompletedEventResponse) GetDebugMessage() string {
	if x != nil {
		return x.DebugMessage
	}
	return ""
}

type ChapterCompletedEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveDays   int32  `protobuf:"varint,1,opt,name=active_days,json=activeDays,proto3" json:"active_days,omitempty"`
	SessionCount int32  `protobuf:"varint,2,opt,name=session_count,json=sessionCount,proto3" json:"session_count,omitempty"`
	MaxChapter   int32  `protobuf:"varint,3,opt,name=max_chapter,json=maxChapter,proto3" json:"max_chapter,omitempty"`
	EventId      []byte `protobuf:"bytes,14,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"` // expecting UUID (16 bytes)
	Datetime     int64  `protobuf:"varint,15,opt,name=datetime,proto3" json:"datetime,omitempty"`             // unix timestamp based with ms
}

func (x *ChapterCompletedEventRequest) Reset() {
	*x = ChapterCompletedEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChapterCompletedEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterCompletedEventRequest) ProtoMessage() {}

func (x *ChapterCompletedEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterCompletedEventRequest.ProtoReflect.Descriptor instead.
func (*ChapterCompletedEventRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{6}
}

func (x *ChapterCompletedEventRequest) GetActiveDays() int32 {
	if x != nil {
		return x.ActiveDays
	}
	return 0
}

func (x *ChapterCompletedEventRequest) GetSessionCount() int32 {
	if x != nil {
		return x.SessionCount
	}
	return 0
}

func (x *ChapterCompletedEventRequest) GetMaxChapter() int32 {
	if x != nil {
		return x.MaxChapter
	}
	return 0
}

func (x *ChapterCompletedEventRequest) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *ChapterCompletedEventRequest) GetDatetime() int64 {
	if x != nil {
		return x.Datetime
	}
	return 0
}

type ChapterCompletedEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId      []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventSaved   bool   `protobuf:"varint,2,opt,name=event_saved,json=eventSaved,proto3" json:"event_saved,omitempty"`
	DebugMessage string `protobuf:"bytes,3,opt,name=debug_message,json=debugMessage,proto3" json:"debug_message,omitempty"`
}

func (x *ChapterCompletedEventResponse) Reset() {
	*x = ChapterCompletedEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChapterCompletedEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChapterCompletedEventResponse) ProtoMessage() {}

func (x *ChapterCompletedEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChapterCompletedEventResponse.ProtoReflect.Descriptor instead.
func (*ChapterCompletedEventResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{7}
}

func (x *ChapterCompletedEventResponse) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *ChapterCompletedEventResponse) GetEventSaved() bool {
	if x != nil {
		return x.EventSaved
	}
	return false
}

func (x *ChapterCompletedEventResponse) GetDebugMessage() string {
	if x != nil {
		return x.DebugMessage
	}
	return ""
}

type BasicStageCompletedEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveDays      int32  `protobuf:"varint,1,opt,name=active_days,json=activeDays,proto3" json:"active_days,omitempty"`
	SessionCount    int32  `protobuf:"varint,2,opt,name=session_count,json=sessionCount,proto3" json:"session_count,omitempty"`
	BasicCompletion int32  `protobuf:"varint,3,opt,name=basic_completion,json=basicCompletion,proto3" json:"basic_completion,omitempty"`
	IsBonus         bool   `protobuf:"varint,4,opt,name=is_bonus,json=isBonus,proto3" json:"is_bonus,omitempty"`
	EventId         []byte `protobuf:"bytes,14,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"` // expecting UUID (16 bytes)
	Datetime        int64  `protobuf:"varint,15,opt,name=datetime,proto3" json:"datetime,omitempty"`             // unix timestamp based with ms
}

func (x *BasicStageCompletedEventRequest) Reset() {
	*x = BasicStageCompletedEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicStageCompletedEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicStageCompletedEventRequest) ProtoMessage() {}

func (x *BasicStageCompletedEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicStageCompletedEventRequest.ProtoReflect.Descriptor instead.
func (*BasicStageCompletedEventRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{8}
}

func (x *BasicStageCompletedEventRequest) GetActiveDays() int32 {
	if x != nil {
		return x.ActiveDays
	}
	return 0
}

func (x *BasicStageCompletedEventRequest) GetSessionCount() int32 {
	if x != nil {
		return x.SessionCount
	}
	return 0
}

func (x *BasicStageCompletedEventRequest) GetBasicCompletion() int32 {
	if x != nil {
		return x.BasicCompletion
	}
	return 0
}

func (x *BasicStageCompletedEventRequest) GetIsBonus() bool {
	if x != nil {
		return x.IsBonus
	}
	return false
}

func (x *BasicStageCompletedEventRequest) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *BasicStageCompletedEventRequest) GetDatetime() int64 {
	if x != nil {
		return x.Datetime
	}
	return 0
}

type BasicStageCompletedEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId      []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventSaved   bool   `protobuf:"varint,2,opt,name=event_saved,json=eventSaved,proto3" json:"event_saved,omitempty"`
	DebugMessage string `protobuf:"bytes,3,opt,name=debug_message,json=debugMessage,proto3" json:"debug_message,omitempty"`
}

func (x *BasicStageCompletedEventResponse) Reset() {
	*x = BasicStageCompletedEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicStageCompletedEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicStageCompletedEventResponse) ProtoMessage() {}

func (x *BasicStageCompletedEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicStageCompletedEventResponse.ProtoReflect.Descriptor instead.
func (*BasicStageCompletedEventResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{9}
}

func (x *BasicStageCompletedEventResponse) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *BasicStageCompletedEventResponse) GetEventSaved() bool {
	if x != nil {
		return x.EventSaved
	}
	return false
}

func (x *BasicStageCompletedEventResponse) GetDebugMessage() string {
	if x != nil {
		return x.DebugMessage
	}
	return ""
}

type EventStageCompletedEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveDays      int32  `protobuf:"varint,1,opt,name=active_days,json=activeDays,proto3" json:"active_days,omitempty"`
	SessionCount    int32  `protobuf:"varint,2,opt,name=session_count,json=sessionCount,proto3" json:"session_count,omitempty"`
	EventCompletion int32  `protobuf:"varint,3,opt,name=event_completion,json=eventCompletion,proto3" json:"event_completion,omitempty"`
	GameEventId     string `protobuf:"bytes,4,opt,name=game_event_id,json=gameEventId,proto3" json:"game_event_id,omitempty"`
	EventId         []byte `protobuf:"bytes,14,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"` // expecting UUID (16 bytes)
	Datetime        int64  `protobuf:"varint,15,opt,name=datetime,proto3" json:"datetime,omitempty"`             // unix timestamp based with ms
}

func (x *EventStageCompletedEventRequest) Reset() {
	*x = EventStageCompletedEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStageCompletedEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStageCompletedEventRequest) ProtoMessage() {}

func (x *EventStageCompletedEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStageCompletedEventRequest.ProtoReflect.Descriptor instead.
func (*EventStageCompletedEventRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{10}
}

func (x *EventStageCompletedEventRequest) GetActiveDays() int32 {
	if x != nil {
		return x.ActiveDays
	}
	return 0
}

func (x *EventStageCompletedEventRequest) GetSessionCount() int32 {
	if x != nil {
		return x.SessionCount
	}
	return 0
}

func (x *EventStageCompletedEventRequest) GetEventCompletion() int32 {
	if x != nil {
		return x.EventCompletion
	}
	return 0
}

func (x *EventStageCompletedEventRequest) GetGameEventId() string {
	if x != nil {
		return x.GameEventId
	}
	return ""
}

func (x *EventStageCompletedEventRequest) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *EventStageCompletedEventRequest) GetDatetime() int64 {
	if x != nil {
		return x.Datetime
	}
	return 0
}

type EventStageCompletedEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId      []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventSaved   bool   `protobuf:"varint,2,opt,name=event_saved,json=eventSaved,proto3" json:"event_saved,omitempty"`
	DebugMessage string `protobuf:"bytes,3,opt,name=debug_message,json=debugMessage,proto3" json:"debug_message,omitempty"`
}

func (x *EventStageCompletedEventResponse) Reset() {
	*x = EventStageCompletedEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventStageCompletedEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventStageCompletedEventResponse) ProtoMessage() {}

func (x *EventStageCompletedEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventStageCompletedEventResponse.ProtoReflect.Descriptor instead.
func (*EventStageCompletedEventResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{11}
}

func (x *EventStageCompletedEventResponse) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *EventStageCompletedEventResponse) GetEventSaved() bool {
	if x != nil {
		return x.EventSaved
	}
	return false
}

func (x *EventStageCompletedEventResponse) GetDebugMessage() string {
	if x != nil {
		return x.DebugMessage
	}
	return ""
}

type BasicLevelNewScoreEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveDays      int32  `protobuf:"varint,1,opt,name=active_days,json=activeDays,proto3" json:"active_days,omitempty"`
	SessionCount    int32  `protobuf:"varint,2,opt,name=session_count,json=sessionCount,proto3" json:"session_count,omitempty"`
	StarsCompletion int32  `protobuf:"varint,3,opt,name=stars_completion,json=starsCompletion,proto3" json:"stars_completion,omitempty"`
	GameCompletion  int32  `protobuf:"varint,4,opt,name=game_completion,json=gameCompletion,proto3" json:"game_completion,omitempty"`
	IsBonus         bool   `protobuf:"varint,5,opt,name=is_bonus,json=isBonus,proto3" json:"is_bonus,omitempty"`
	FirstSuccess    bool   `protobuf:"varint,6,opt,name=first_success,json=firstSuccess,proto3" json:"first_success,omitempty"`
	PrevBasicStars  int32  `protobuf:"varint,7,opt,name=prev_basic_stars,json=prevBasicStars,proto3" json:"prev_basic_stars,omitempty"`
	PrevAllStars    int32  `protobuf:"varint,8,opt,name=prev_all_stars,json=prevAllStars,proto3" json:"prev_all_stars,omitempty"`
	BasicStars      int32  `protobuf:"varint,9,opt,name=basic_stars,json=basicStars,proto3" json:"basic_stars,omitempty"`
	AllStars        int32  `protobuf:"varint,10,opt,name=all_stars,json=allStars,proto3" json:"all_stars,omitempty"`
	EventId         []byte `protobuf:"bytes,14,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"` // expecting UUID (16 bytes)
	Datetime        int64  `protobuf:"varint,15,opt,name=datetime,proto3" json:"datetime,omitempty"`             // unix timestamp based with ms
}

func (x *BasicLevelNewScoreEventRequest) Reset() {
	*x = BasicLevelNewScoreEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicLevelNewScoreEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicLevelNewScoreEventRequest) ProtoMessage() {}

func (x *BasicLevelNewScoreEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicLevelNewScoreEventRequest.ProtoReflect.Descriptor instead.
func (*BasicLevelNewScoreEventRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{12}
}

func (x *BasicLevelNewScoreEventRequest) GetActiveDays() int32 {
	if x != nil {
		return x.ActiveDays
	}
	return 0
}

func (x *BasicLevelNewScoreEventRequest) GetSessionCount() int32 {
	if x != nil {
		return x.SessionCount
	}
	return 0
}

func (x *BasicLevelNewScoreEventRequest) GetStarsCompletion() int32 {
	if x != nil {
		return x.StarsCompletion
	}
	return 0
}

func (x *BasicLevelNewScoreEventRequest) GetGameCompletion() int32 {
	if x != nil {
		return x.GameCompletion
	}
	return 0
}

func (x *BasicLevelNewScoreEventRequest) GetIsBonus() bool {
	if x != nil {
		return x.IsBonus
	}
	return false
}

func (x *BasicLevelNewScoreEventRequest) GetFirstSuccess() bool {
	if x != nil {
		return x.FirstSuccess
	}
	return false
}

func (x *BasicLevelNewScoreEventRequest) GetPrevBasicStars() int32 {
	if x != nil {
		return x.PrevBasicStars
	}
	return 0
}

func (x *BasicLevelNewScoreEventRequest) GetPrevAllStars() int32 {
	if x != nil {
		return x.PrevAllStars
	}
	return 0
}

func (x *BasicLevelNewScoreEventRequest) GetBasicStars() int32 {
	if x != nil {
		return x.BasicStars
	}
	return 0
}

func (x *BasicLevelNewScoreEventRequest) GetAllStars() int32 {
	if x != nil {
		return x.AllStars
	}
	return 0
}

func (x *BasicLevelNewScoreEventRequest) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *BasicLevelNewScoreEventRequest) GetDatetime() int64 {
	if x != nil {
		return x.Datetime
	}
	return 0
}

type BasicLevelNewScoreEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId      []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventSaved   bool   `protobuf:"varint,2,opt,name=event_saved,json=eventSaved,proto3" json:"event_saved,omitempty"`
	DebugMessage string `protobuf:"bytes,3,opt,name=debug_message,json=debugMessage,proto3" json:"debug_message,omitempty"`
}

func (x *BasicLevelNewScoreEventResponse) Reset() {
	*x = BasicLevelNewScoreEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasicLevelNewScoreEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasicLevelNewScoreEventResponse) ProtoMessage() {}

func (x *BasicLevelNewScoreEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasicLevelNewScoreEventResponse.ProtoReflect.Descriptor instead.
func (*BasicLevelNewScoreEventResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{13}
}

func (x *BasicLevelNewScoreEventResponse) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *BasicLevelNewScoreEventResponse) GetEventSaved() bool {
	if x != nil {
		return x.EventSaved
	}
	return false
}

func (x *BasicLevelNewScoreEventResponse) GetDebugMessage() string {
	if x != nil {
		return x.DebugMessage
	}
	return ""
}

type EventLevelNewScoreEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ActiveDays          int32  `protobuf:"varint,1,opt,name=active_days,json=activeDays,proto3" json:"active_days,omitempty"`
	SessionCount        int32  `protobuf:"varint,2,opt,name=session_count,json=sessionCount,proto3" json:"session_count,omitempty"`
	EventFullCompletion int32  `protobuf:"varint,3,opt,name=event_full_completion,json=eventFullCompletion,proto3" json:"event_full_completion,omitempty"`
	GameEventId         string `protobuf:"bytes,4,opt,name=game_event_id,json=gameEventId,proto3" json:"game_event_id,omitempty"`
	EventStamps         int32  `protobuf:"varint,5,opt,name=event_stamps,json=eventStamps,proto3" json:"event_stamps,omitempty"`
	IsBonus             bool   `protobuf:"varint,6,opt,name=is_bonus,json=isBonus,proto3" json:"is_bonus,omitempty"`
	FirstSuccess        bool   `protobuf:"varint,7,opt,name=first_success,json=firstSuccess,proto3" json:"first_success,omitempty"`
	PrevBasicStars      int32  `protobuf:"varint,8,opt,name=prev_basic_stars,json=prevBasicStars,proto3" json:"prev_basic_stars,omitempty"`
	PrevAllStars        int32  `protobuf:"varint,9,opt,name=prev_all_stars,json=prevAllStars,proto3" json:"prev_all_stars,omitempty"`
	BasicStars          int32  `protobuf:"varint,10,opt,name=basic_stars,json=basicStars,proto3" json:"basic_stars,omitempty"`
	AllStars            int32  `protobuf:"varint,11,opt,name=all_stars,json=allStars,proto3" json:"all_stars,omitempty"`
	EventId             []byte `protobuf:"bytes,14,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"` // expecting UUID (16 bytes)
	Datetime            int64  `protobuf:"varint,15,opt,name=datetime,proto3" json:"datetime,omitempty"`             // unix timestamp based with ms
}

func (x *EventLevelNewScoreEventRequest) Reset() {
	*x = EventLevelNewScoreEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventLevelNewScoreEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventLevelNewScoreEventRequest) ProtoMessage() {}

func (x *EventLevelNewScoreEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventLevelNewScoreEventRequest.ProtoReflect.Descriptor instead.
func (*EventLevelNewScoreEventRequest) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{14}
}

func (x *EventLevelNewScoreEventRequest) GetActiveDays() int32 {
	if x != nil {
		return x.ActiveDays
	}
	return 0
}

func (x *EventLevelNewScoreEventRequest) GetSessionCount() int32 {
	if x != nil {
		return x.SessionCount
	}
	return 0
}

func (x *EventLevelNewScoreEventRequest) GetEventFullCompletion() int32 {
	if x != nil {
		return x.EventFullCompletion
	}
	return 0
}

func (x *EventLevelNewScoreEventRequest) GetGameEventId() string {
	if x != nil {
		return x.GameEventId
	}
	return ""
}

func (x *EventLevelNewScoreEventRequest) GetEventStamps() int32 {
	if x != nil {
		return x.EventStamps
	}
	return 0
}

func (x *EventLevelNewScoreEventRequest) GetIsBonus() bool {
	if x != nil {
		return x.IsBonus
	}
	return false
}

func (x *EventLevelNewScoreEventRequest) GetFirstSuccess() bool {
	if x != nil {
		return x.FirstSuccess
	}
	return false
}

func (x *EventLevelNewScoreEventRequest) GetPrevBasicStars() int32 {
	if x != nil {
		return x.PrevBasicStars
	}
	return 0
}

func (x *EventLevelNewScoreEventRequest) GetPrevAllStars() int32 {
	if x != nil {
		return x.PrevAllStars
	}
	return 0
}

func (x *EventLevelNewScoreEventRequest) GetBasicStars() int32 {
	if x != nil {
		return x.BasicStars
	}
	return 0
}

func (x *EventLevelNewScoreEventRequest) GetAllStars() int32 {
	if x != nil {
		return x.AllStars
	}
	return 0
}

func (x *EventLevelNewScoreEventRequest) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *EventLevelNewScoreEventRequest) GetDatetime() int64 {
	if x != nil {
		return x.Datetime
	}
	return 0
}

type EventLevelNewScoreEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EventId      []byte `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	EventSaved   bool   `protobuf:"varint,2,opt,name=event_saved,json=eventSaved,proto3" json:"event_saved,omitempty"`
	DebugMessage string `protobuf:"bytes,3,opt,name=debug_message,json=debugMessage,proto3" json:"debug_message,omitempty"`
}

func (x *EventLevelNewScoreEventResponse) Reset() {
	*x = EventLevelNewScoreEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_grpc_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventLevelNewScoreEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventLevelNewScoreEventResponse) ProtoMessage() {}

func (x *EventLevelNewScoreEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_grpc_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventLevelNewScoreEventResponse.ProtoReflect.Descriptor instead.
func (*EventLevelNewScoreEventResponse) Descriptor() ([]byte, []int) {
	return file_grpc_proto_rawDescGZIP(), []int{15}
}

func (x *EventLevelNewScoreEventResponse) GetEventId() []byte {
	if x != nil {
		return x.EventId
	}
	return nil
}

func (x *EventLevelNewScoreEventResponse) GetEventSaved() bool {
	if x != nil {
		return x.EventSaved
	}
	return false
}

func (x *EventLevelNewScoreEventResponse) GetDebugMessage() string {
	if x != nil {
		return x.DebugMessage
	}
	return ""
}

var File_grpc_proto protoreflect.FileDescriptor

var file_grpc_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x10, 0x0a, 0x0e,
	0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11,
	0x0a, 0x0f, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x93, 0x01, 0x0a, 0x1a, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64,
	0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6e, 0x65, 0x77, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x6e, 0x65, 0x77, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x7e, 0x0a, 0x1b, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x61, 0x76,
	0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbb, 0x03, 0x0a, 0x1a, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x74, 0x74, 0x65,
	0x6d, 0x70, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x6d, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x69, 0x63, 0x53,
	0x74, 0x61, 0x72, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x61, 0x6c, 0x6c,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72,
	0x65, 0x76, 0x41, 0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72,
	0x65, 0x76, 0x5f, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x42, 0x61, 0x73, 0x69, 0x63, 0x53,
	0x74, 0x61, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x42,
	0x6f, 0x6e, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64,
	0x61, 0x79, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x44, 0x61, 0x79, 0x73, 0x22, 0x7e, 0x0a, 0x1b, 0x53, 0x74, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbc, 0x01, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x6d, 0x61, 0x78, 0x5f, 0x63, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x6d, 0x61, 0x78, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x22, 0x80, 0x01, 0x0a, 0x1d, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x61, 0x76,
	0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x62, 0x75, 0x67,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xe4, 0x01, 0x0a, 0x1f, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x53, 0x74, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x23, 0x0a, 0x0d,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x62, 0x61, 0x73,
	0x69, 0x63, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x69, 0x73, 0x5f, 0x62, 0x6f, 0x6e, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x69, 0x73, 0x42, 0x6f, 0x6e, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x83,
	0x01, 0x0a, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x53, 0x74, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x1f, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29,
	0x0a, 0x10, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x67, 0x61, 0x6d,
	0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65,
	0x74, 0x69, 0x6d, 0x65, 0x22, 0x83, 0x01, 0x0a, 0x20, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x61,
	0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x53, 0x61, 0x76, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xbf, 0x03, 0x0a, 0x1e, 0x42,
	0x61, 0x73, 0x69, 0x63, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x65, 0x77, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x23,
	0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x73, 0x5f, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x73,
	0x74, 0x61, 0x72, 0x73, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27,
	0x0a, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x67, 0x61, 0x6d, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x62, 0x6f,
	0x6e, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x42, 0x6f, 0x6e,
	0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74,
	0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x76, 0x5f,
	0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x42, 0x61, 0x73, 0x69, 0x63, 0x53, 0x74, 0x61, 0x72,
	0x73, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x41,
	0x6c, 0x6c, 0x53, 0x74, 0x61, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x69, 0x63,
	0x5f, 0x73, 0x74, 0x61, 0x72, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x53, 0x74, 0x61, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a,
	0x1f, 0x42, 0x61, 0x73, 0x69, 0x63, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x65, 0x77, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x65, 0x62, 0x75, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0xe6, 0x03, 0x0a, 0x1e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4e, 0x65, 0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x64,
	0x61, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x44, 0x61, 0x79, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x46, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22,
	0x0a, 0x0d, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x61, 0x6d, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x6d, 0x70, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x62, 0x6f, 0x6e, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x42, 0x6f, 0x6e, 0x75, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x75,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x62, 0x61,
	0x73, 0x69, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0e, 0x70, 0x72, 0x65, 0x76, 0x42, 0x61, 0x73, 0x69, 0x63, 0x53, 0x74, 0x61, 0x72, 0x73, 0x12,
	0x24, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x72,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x41, 0x6c, 0x6c,
	0x53, 0x74, 0x61, 0x72, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x69, 0x63, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x69,
	0x63, 0x53, 0x74, 0x61, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x74,
	0x61, 0x72, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61, 0x6c, 0x6c, 0x53, 0x74,
	0x61, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x82, 0x01, 0x0a, 0x1f, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x65, 0x77, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x5f, 0x73, 0x61, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x61, 0x76, 0x65, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65,
	0x62, 0x75, 0x67, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x64, 0x65, 0x62, 0x75, 0x67, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32,
	0xbf, 0x05, 0x0a, 0x15, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x41, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69,
	0x63, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x1b, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1b, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x53, 0x74, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a,
	0x15, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x43, 0x68, 0x61, 0x70, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x18, 0x42, 0x61, 0x73, 0x69, 0x63, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x20, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x53, 0x74, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x18, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x20, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x17, 0x42, 0x61, 0x73, 0x69, 0x63,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x65, 0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1f, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e,
	0x65, 0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x42, 0x61, 0x73, 0x69, 0x63, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x4e, 0x65, 0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x17, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x4e, 0x65, 0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x1f, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x65, 0x77,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4e, 0x65,
	0x77, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x07, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x12, 0x0f,
	0x2e, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x10, 0x2e, 0x49, 0x73, 0x41, 0x6c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x38, 0x0a, 0x26, 0x63, 0x6f, 0x6d, 0x2e, 0x7a, 0x65, 0x70, 0x74, 0x6f, 0x6c, 0x61,
	0x62, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2e, 0x61, 0x72, 0x63, 0x61,
	0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x50, 0x01, 0x5a, 0x0c, 0x61,
	0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_grpc_proto_rawDescOnce sync.Once
	file_grpc_proto_rawDescData = file_grpc_proto_rawDesc
)

func file_grpc_proto_rawDescGZIP() []byte {
	file_grpc_proto_rawDescOnce.Do(func() {
		file_grpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_grpc_proto_rawDescData)
	})
	return file_grpc_proto_rawDescData
}

var file_grpc_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_grpc_proto_goTypes = []interface{}{
	(*IsAliveRequest)(nil),                   // 0: IsAliveRequest
	(*IsAliveResponse)(nil),                  // 1: IsAliveResponse
	(*SessionStartedEventRequest)(nil),       // 2: SessionStartedEventRequest
	(*SessionStartedEventResponse)(nil),      // 3: SessionStartedEventResponse
	(*StageCompletedEventRequest)(nil),       // 4: StageCompletedEventRequest
	(*StageCompletedEventResponse)(nil),      // 5: StageCompletedEventResponse
	(*ChapterCompletedEventRequest)(nil),     // 6: ChapterCompletedEventRequest
	(*ChapterCompletedEventResponse)(nil),    // 7: ChapterCompletedEventResponse
	(*BasicStageCompletedEventRequest)(nil),  // 8: BasicStageCompletedEventRequest
	(*BasicStageCompletedEventResponse)(nil), // 9: BasicStageCompletedEventResponse
	(*EventStageCompletedEventRequest)(nil),  // 10: EventStageCompletedEventRequest
	(*EventStageCompletedEventResponse)(nil), // 11: EventStageCompletedEventResponse
	(*BasicLevelNewScoreEventRequest)(nil),   // 12: BasicLevelNewScoreEventRequest
	(*BasicLevelNewScoreEventResponse)(nil),  // 13: BasicLevelNewScoreEventResponse
	(*EventLevelNewScoreEventRequest)(nil),   // 14: EventLevelNewScoreEventRequest
	(*EventLevelNewScoreEventResponse)(nil),  // 15: EventLevelNewScoreEventResponse
}
var file_grpc_proto_depIdxs = []int32{
	2,  // 0: RouteAnalyticsService.SessionStartedEvent:input_type -> SessionStartedEventRequest
	4,  // 1: RouteAnalyticsService.StageCompletedEvent:input_type -> StageCompletedEventRequest
	6,  // 2: RouteAnalyticsService.ChapterCompletedEvent:input_type -> ChapterCompletedEventRequest
	8,  // 3: RouteAnalyticsService.BasicStageCompletedEvent:input_type -> BasicStageCompletedEventRequest
	10, // 4: RouteAnalyticsService.EventStageCompletedEvent:input_type -> EventStageCompletedEventRequest
	12, // 5: RouteAnalyticsService.BasicLevelNewScoreEvent:input_type -> BasicLevelNewScoreEventRequest
	14, // 6: RouteAnalyticsService.EventLevelNewScoreEvent:input_type -> EventLevelNewScoreEventRequest
	0,  // 7: RouteAnalyticsService.IsAlive:input_type -> IsAliveRequest
	3,  // 8: RouteAnalyticsService.SessionStartedEvent:output_type -> SessionStartedEventResponse
	5,  // 9: RouteAnalyticsService.StageCompletedEvent:output_type -> StageCompletedEventResponse
	7,  // 10: RouteAnalyticsService.ChapterCompletedEvent:output_type -> ChapterCompletedEventResponse
	9,  // 11: RouteAnalyticsService.BasicStageCompletedEvent:output_type -> BasicStageCompletedEventResponse
	11, // 12: RouteAnalyticsService.EventStageCompletedEvent:output_type -> EventStageCompletedEventResponse
	13, // 13: RouteAnalyticsService.BasicLevelNewScoreEvent:output_type -> BasicLevelNewScoreEventResponse
	15, // 14: RouteAnalyticsService.EventLevelNewScoreEvent:output_type -> EventLevelNewScoreEventResponse
	1,  // 15: RouteAnalyticsService.IsAlive:output_type -> IsAliveResponse
	8,  // [8:16] is the sub-list for method output_type
	0,  // [0:8] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_grpc_proto_init() }
func file_grpc_proto_init() {
	if File_grpc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_grpc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAliveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IsAliveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionStartedEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionStartedEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageCompletedEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StageCompletedEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChapterCompletedEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChapterCompletedEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicStageCompletedEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicStageCompletedEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStageCompletedEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventStageCompletedEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicLevelNewScoreEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasicLevelNewScoreEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventLevelNewScoreEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_grpc_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventLevelNewScoreEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_proto_goTypes,
		DependencyIndexes: file_grpc_proto_depIdxs,
		MessageInfos:      file_grpc_proto_msgTypes,
	}.Build()
	File_grpc_proto = out.File
	file_grpc_proto_rawDesc = nil
	file_grpc_proto_goTypes = nil
	file_grpc_proto_depIdxs = nil
}
